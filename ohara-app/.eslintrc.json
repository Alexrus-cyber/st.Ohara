{
  "env": {
    // где будет исполняться наш код
    "browser": true,
    "es2021": true
  },
  /* Пресет с настройками. prettier должен быть последним.
  Он удаляет некоторые правила eslint из-за которых могут возникать конфликты. */
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "prettier"
  ],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "babelOptions": {
      "presets": [
        "@babel/preset-react"
      ]
    },
    "requireConfigFile": false,
    "ecmaFeatures": {
      "experimentalObjectRestSpread": true,
      "jsx": true,
      "legacyDecorators": true
    },
    "sourceType": "module",
    "allowImportExportEverywhere": false
  },
  // Здесь мы подключаем используемые плагины.
  "plugins": [
    "react",
    "prettier"
  ],
  /* Правила для отслеживания линтером. Если пресеты покрывают не все ситуации,
  вы можете прописать нужные правила вручную. */
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto"
      }
    ],
    "react/no-unescaped-entities": 0,
    "react/display-name": "off",
    // Обязательно!! Подсвечивает ошибки из Prettier.
    "react/prop-types": 0,
    // Отключаем правило проверки передаваемых типов.
    "react/react-in-jsx-scope": "off",
    // allow jsx syntax in js files (for next.js project)
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx"
        ]
      }
    ]
  }
}